ALTER Queries
-----------------

ALTER TABLE `bill` ADD CONSTRAINT `FK_bill_created_by` FOREIGN KEY (`created_by`) REFERENCES `users` (`id`);
ALTER TABLE `bill` ADD CONSTRAINT `FK_bill_updated_by` FOREIGN KEY (`updated_by`) REFERENCES `users` (`id`);
ALTER TABLE `bill_product` ADD CONSTRAINT `FK_bill_product_id` FOREIGN KEY (`bill_id`) REFERENCES `bill` (`id`);
ALTER TABLE `bill_product` ADD CONSTRAINT `FK_bill_product_product_id` FOREIGN KEY (`product_id`) REFERENCES `product` (`id`);
ALTER TABLE `bill_product` ADD CONSTRAINT `FK_bill_product_discount_id` FOREIGN KEY (`discount_id`) REFERENCES `discount` (`id`);
ALTER TABLE `discount_product` ADD CONSTRAINT `FK_discount_product_discount_id` FOREIGN KEY (`discount_id`) REFERENCES `discount` (`id`);
ALTER TABLE `discount_product` ADD CONSTRAINT `FK_discount_product_product_id` FOREIGN KEY (`product_id`) REFERENCES `product` (`id`);

ALTER TABLE `bill`     ADD COLUMN `status` ENUM('Hold','Sold','Pending','Deleted','Cancelled') NULL AFTER `tax_bill`;
ALTER TABLE `bill_product`     ADD COLUMN `status` ENUM('Hold','Sold','Pending','Cancelled','Returned') NULL AFTER `tax`;


Queries
-------
Get sales of a batch

SELECT  c.category, COUNT(bp.product_id) AS total_item, SUM(p.purchase_price) AS purchase_price
FROM bill_product bp
JOIN product p ON p.id=bp.product_id
JOIN batch_shops bs ON p.batch_shop_id=bs.id
JOIN batch b ON bs.batch_id=b.id
JOIN category c ON p.category_id=c.id
WHERE b.id=2 
GROUP BY p.category_id


Get Purchase summary of a branch


SELECT  c.category, SUM(p.initial_quantity) AS total_item, SUM(p.initial_quantity*p.purchase_price) AS purchase_price
FROM  product p 
JOIN batch_shops bs ON p.batch_shop_id=bs.id
JOIN category c ON p.category_id=c.id
WHERE bs.batch_id=2 
GROUP BY p.category_id

category and shop split up
--------------------------
SELECT  c.category, SUM(p.initial_quantity) AS total_item,bs.shop_id,s.shop, SUM(p.initial_quantity*p.purchase_price) AS purchase_price


buy and sold shop wise split up
-------------------------------
SELECT  c.category, SUM(p.initial_quantity) AS total_item_purchased,bs.shop_id,s.shop, SUM(p.initial_quantity*p.purchase_price) AS purchase_price,
COUNT(bp.id) total_item_sold,SUM(bp.customer_price) AS sold_price
FROM  product p 
JOIN batch_shops bs ON p.batch_shop_id=bs.id
JOIN category c ON p.category_id=c.id
JOIN shop s ON bs.shop_id=s.id
LEFT JOIN bill_product bp ON p.id=bp.product_id
WHERE bs.batch_id=3 AND p.category_id=2
GROUP BY p.batch_shop_id